export const articles=[
                    {
                        caption: "Что такое DOM и зачем он нужен",
                        p:["Браузер, перед тем как показать нам запрашиваемую страницу, выполняет большое количество различных действий. Самое важное здесь понять, что браузер не работает с HTML-страницей напрямую как с текстом, а строит для этого DOM.",
                            "DOM - это объектная модель документа (Document Object Model). Представляет она собой древовидную структуру страницы, состоящую из узлов. Каждый узел в ней - это объект, который может иметь определённые свойства и методы. Иными словами, можно сказать, что DOM - это набор иерархически связанных между собой объектов.",
                            '<img class="article-img" src="https://nwillis.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F379a6f24-b2a0-4e17-9a63-18493e7ff8f0%2F5ac98fbe-75a1-4359-ad50-8b839ecd31a9%2FUntitled.png?table=block&id=2a84d761-489c-42bb-b30d-eb09a940c21a&spaceId=379a6f24-b2a0-4e17-9a63-18493e7ff8f0&width=1210&userId=&cache=v2">',
                            "Сиблинг (анг. sibling) - родственник. Здесь сиблинги - это родственные соседние узлы, находящиеся на одном уровне.",
                            "Зачем браузер строит DOM? В основном это связано с тем, что прочитанный HTML-код ему нужно как-то представить в памяти и было решено, что оптимально это будет сделать в виде древовидной структуры. После того как браузер построил DOM, он его использует в дальнейших процессах, конечной целью которых является построения отображения этой страницы на экране.",
                            "Процесс перевода HTML-кода страницы в DOM выполняет парсер. При этом он это делает даже если HTML-код содержит ошибки, но так как он в данном случае это «понимает».",
                            "При этом DOM не является статической структурой. Её можно изменять с помощью JavaScript и тут же видеть эти изменения на экране. Для этого браузер нам предоставляет API. То есть благодаря DOM, можно с помощью JavaScript изменять содержимое страницы на лету. Таким образом, JavaScript - это ключевая технология для создания динамических веб-сайтов и веб-приложений. Без неё, каким-то других способом это сделать невозможно.",
                            "DOM - это объектное представление исходного HTML-кода документа. Процесс формирования DOM происходит так: браузер получает HTML-код, парсит его и строит DOM.",
                            "Затем, как уже отмечалось выше браузер использует DOM (а не исходный HTML) для строительства страницы сайта.",
                            "Почему не использовать в этом случае просто HTML? Потому что HTML - это текст, и с ним невозможно работать так как есть. Для этого нужно его разобрать и создать на его основе объект, что и делает браузер. И этим объектом является DOM.",
                            "Итак, DOM - это объектная модель документа, которую браузер создаёт в памяти компьютера на основании HTML-кода.",
                            "По-простому, HTML-код - это текст страницы, а DOM - это объект, созданный браузером при парсинге этого текста.",
                            "Браузер, используя DOM, предоставляет нам программный доступ к нему. Следовательно, с помощью JavaScript можно изменять DOM."
                        ]
                    },
                    {
                        caption: "Начало взаимодействия с DOM",
                        p:["Чтобы найти узел и в дальнейшем с ним работать, есть метод querySelector, который позволяет находить узел в DOM-дереве по названию html-тега, по атрибуту class или атрибуту id. Он возвращает ссылку на первый найденный DOM-узел.",
                            "Т.к. у элементов нет родительского элемента, то узлы в DOM-дереве мы ищем в объекте document, который является входной точной DOM-дерева.",
                            'Обратите внимание, как аргументы передаются в метод querySelector, это обязательно строка. Если ищем по названию html-тега, то просто передаём его название внутри кавычек "h1". Если ищем по атрибуту class, то передаём название класса в кавычках и с точкой в начале - ".title". Если ищем по атрибуту id, то передаём название идентификатора в кавычках и решёткой в начале - "#text". Чаще всего поиск осуществляется по атрибуту class.',
                            "Операция поиска узлы в объекте document является достаточно ресурсозатратной для ПК, особенно, если в DOM-дереве очень много узлов. Поэтому более оптимизированным вариантом будет поиск родительских узлов, а потом уже осуществлять поиск внутри найденного узла.",
                            "Метод querySelector полезен, когда нужно найти какой-то один уникальный узел. Но бывают случаи, когда нам нужно найти все родственные элементы сразу. Для этого есть метод querySelectorAll, который возвращает массив всех найденных узлов (NodeList). Важно! типа NodeList не эквивалентен типу Array, т.е. методы массивов не работают с типом NodeList. Но у NodeList есть свои методы, см. в документации https://developer.mozilla.org/ru/docs/Web/API/NodeList"
                        ]
                    }
];